import { pessoaService, profissaoService } from 'services';
import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import Link from 'next/link';
import { useEffect, useState } from 'react'
import type { Pessoa, Profissao } from 'types'

interface Props {
  pessoas: Pessoa[];
  profissoes: Profissao[];
}


const Home:  NextPage<Props> = ({ pessoas, profissoes }) => {

   const [localPessoas, setLocalPessoas] = useState<Pessoa[]>(pessoas)
   const [localProfissoes, setLocalProfissoes] = useState<Profissao[]>(profissoes)


   const confirmDeletePerson = (id: number) => {
     if (confirm(`Are you sure you want to delete this person?`)) {
       deletePerson(id);
     }
   }

   const confirmDeleteProfession = (id: number) => {
     if (confirm(`Are you sure you want to delete this profession?\n\nAll people who have this profession will also be excluded.`)) {
       deleteProfession(id);
     }
   }


  const deletePerson = async (id: number) => {
    await pessoaService.delete(id)
      .then(() => {
        setLocalPessoas(localPessoas.filter(pessoa => pessoa.id !== id))
      })
      .catch(err => console.log(err))
  }

  const deleteProfession = async (id: number) => {
    // . Cascade Delete People which rely on this profession
    await localPessoas.forEach(async pessoa => {
      if (pessoa.profissaoId === id) {
        await deletePerson(pessoa.id)
      }
    })

    // . Delete Profession
    profissaoService.delete(id)
      .then(() => {
        setLocalProfissoes(localProfissoes.filter(profissao => profissao.id !== id))
      })
      .catch(err => console.log(err))
  }
 

  return (
    <div className="container">
      <Head>
        <title>Teste</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="shortcut icon" href="/favicon.png" type="image/png"></link>
      </Head>

      <div className="flex items-center gap-4">
        <h3>People</h3>
        <Link href="/pessoas/criar">
          <a className="waves-effect waves-light btn-floating">
            <i className="material-icons small">add</i>
          </a>
        </Link>
      </div>
      <table className="striped">
        <thead>
          <tr>
            <th>Name</th>
            <th>Profession</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          {localPessoas.map((pessoa) => (
            <tr key={pessoa.id}>
              <td>{pessoa.nome}</td>
              <td>{pessoa.profissao.nome}</td>
              <td>
                <div className="flex items-center gap-4">
                  <Link href={`/pessoas/${pessoa.id}`}>
                    <a
                      className="waves-effect waves-light btn-floating"
                    >
                      <i className="material-icons small">visibility</i>
                    </a>
                  </Link>
                  <Link href={`/pessoas/editar/${pessoa.id}`}>
                    <a
                      className="waves-effect waves-light btn-floating"
                    >
                      <i className="material-icons small">edit</i>
                    </a>
                  </Link>
                  <a
                    className="waves-effect waves-light btn-floating"
                    onClick={() => confirmDeletePerson(pessoa.id)}
                  >
                    <i className="material-icons small">delete</i>
                  </a>
                </div>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      <div className="flex items-center gap-4">
        <h3>Professions</h3>
        <Link href="/profissoes/criar">
          <a className="waves-effect waves-light btn-floating">
            <i className="material-icons small">add</i>
          </a>
        </Link>
      </div>
      <table className="striped">
        <thead>
          <tr>
            <th>Profession</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          {localProfissoes.map((profissao) => (
            <tr key={profissao.id}>
              <td>{profissao.nome}</td>
              <td>
                <div className="flex items-center gap-4">
                <Link href={`/profissoes/${profissao.id}`}>
                    <a
                      className="waves-effect waves-light btn-floating"
                    >
                      <i className="material-icons small">visibility</i>
                    </a>
                  </Link>
                  <Link href={`/profissoes/editar/${profissao.id}`}>
                    <a
                      className="waves-effect waves-light btn-floating"
                    >
                      <i className="material-icons small">edit</i>
                    </a>
                  </Link>
                  <a
                    className="waves-effect waves-light btn-floating"
                    onClick={() => confirmDeleteProfession(profissao.id)}
                  >
                    <i className="material-icons small">delete</i>
                  </a>
                </div>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
      
    </div>
  );
}

export default Home


export const getServerSideProps : GetServerSideProps = async ({ params }) => {
  const pessoas = await pessoaService.getAll()
  const profissoes = await profissaoService.getAll()
  return {
      props: { pessoas, profissoes }
  }
}